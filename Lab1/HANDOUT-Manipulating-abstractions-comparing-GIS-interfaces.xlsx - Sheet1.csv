,Instruction Sets,,,
How toâ€¦,ArcPro GUI,ArcPy,Fiona/Shapely,PostGIS
Create a feature class,Catalog > right click database > New > Feature Class > INSERT DETAILS,"arcpy.management.CreateFeatureclass(out_path, out_name)","with fiona.open('output.shp', 'w', driver='ESRI Shapefile', schema=schema, crs=crs) as shp:
    # Write features
    shp.write({
        'geometry': {'type': 'Point', 'coordinates': (0, 0)},
        'properties': {'id': 1, 'name': 'Point 1'}
    })
    shp.write({
        'geometry': {'type': 'Point', 'coordinates': (1, 1)},
        'properties': {'id': 2, 'name': 'Point 2'}
    })","CREATE TABLE geometries (name varchar, geom geometry);"
Add points to a feature class,"Be sure Feature Class was created as a a Feature Class ""Point"" Type > ... ","array = arcpy.Array([arcpy.Point(x,y), arcpy.Point(x,y), arcpy.Point(x,y)])
fc = r'file-ext'
with arcpy.da.InsertCursor(fc, ['SHAPE@XY']) as cursor:
    cursor.insertRow([row])","schema = {'geometry': 'Point', 
          'properties': {'num': 'int',
                      'panodate': 'str',
                      'panoid': 'str',
                    }
         }
with fiona.open(outname, 'w', 'ESRI Shapefile', schema=schema, crs = from_epsg(4326)) as out_pnt:
    for row in cursor.fetchall():
        num, date, panoid, lon, lat = row
        point = Point(float(lon), float(lat))
        out_pnt.write({'geometry': mapping(point), 'properties'{
                                                    'num': num,        'panodate': date,'panoid': panoid}})","INSERT INTO geometries VALUES
  ('Point', 'POINT(0 0)')"
Add line to a feature class,"Be sure Feature Class was created as a a Feature Class ""Line"" Type > ... ",use insert cursor (shane insertRow to reflect line,"# Define the schema for the line feature
schema = {
    'geometry': 'LineString',
    'properties': {'id': 'int', 'name': 'str'}
}

# Open the shapefile in append mode
with fiona.open('lines.shp', 'a', schema=schema) as collection:
    # Define the new line feature
    new_line = {
        'type': 'Feature',
        'geometry': {
            'type': 'LineString',
            'coordinates': [(1, 1), (2, 2), (3, 1)]
        },
        'properties': {'id': 2, 'name': 'Line 2'}
    }","INSERT INTO geometries VALUES
  ('Linestring', 'LINESTRING(0 0, 1 1, 2 1, 2 2)')"
Add polygons to a feature class,"Be sure Feature Class was created as a a Feature Class ""Polygon"" Type > ... ",use insert cursor (shane insertRow to reflect polygon,"# Define the properties for the new feature
properties = {'id': 1, 'name': 'Polygon 1'}

# Open the shapefile in append mode
with fiona.open(shapefile_path, 'a') as collection:
    # Create the new feature dictionary
    new_feature = {
        'type': 'Feature',
        'properties': properties,
        'geometry': {
            'type': 'Polygon',
            'coordinates': [list(polygon.exterior.coords)]
        }
    }","INSERT INTO geometries VALUES
  ('Polygon', 'POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))'),"
View each row in an attribute table for a feature class,In contents > right click layer > click attribute table,cursor --> print(row)...,"with fiona.open('your_shapefile.shp', 'r') as collection:
    # Iterate over the features
    for feature in collection:
        # Access the attributes of the feature
        attributes = feature['properties']
        # Print the attributes (or do something else with them)
        print(attributes)",SELECT * FROM table_name;
View each geometry object in a feature class,In map pane > pan and zoom,cursor --> print(geom),"with fiona.open(filepath, 'r') as collection:
    for feature in collection:
        print(feature['geometry'])",SELECT ST_AsText(geom) FROM table_name;
Summarize the contents of a feature class,"In attribute table, view headings",cursor --> use notes from class,"with fiona.open('your_file.shp', 'r') as source:
        schema = source.schema
        column_names = list(schema['properties'].keys())
        print(column_names)","SELECT column_name 
FROM information_schema.columns 
WHERE table_name = 'your_table'
"
Export to shapefile,In contents pane > right click layer > data > export features > choose folder location > name it <name>.shp,"arcpy.conversion.FeatureClassToShapefile(Input_Features, Output_Folder)","# Write the feature to the shapefile
shp.write(feature)",???
Export to geodatabase,Geoprocessing > Feature Class to Geodatabase > Choose Input Feature > Name it <output name>.gdb,"arcpy.conversion.FeatureClassToGeodatabase(Input_Features, Output_Geodatabase)","layer.to_file(""result.gdf"",driver=""FileGDB"") ","SELECT ST_AsGeoJSON(ST_GeomFromGML('<gml:Point><gml:coordinates>1,1</gml:coordinates></gml:Point>'));
"
